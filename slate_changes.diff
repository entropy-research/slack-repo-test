diff --git a/index.html b/index.html
index ac3b156..1946c4c 100644
--- a/index.html
+++ b/index.html
@@ -3,48 +3,42 @@
 <head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Fish Paradise</title>
+    <title>Snake Game</title>
     <link rel="stylesheet" href="style.css">
 </head>
 <body>
-    <div class="fish-container">
+    <div class="game-container">
         <header>
-            <h1>üêü Fish Paradise üêü</h1>
-            <p class="tagline">The ultimate destination for fish enthusiasts!</p>
+            <h1>üêç Snake Game üêç</h1>
+            <p class="tagline">Classic arcade game reimagined!</p>
         </header>
         
-        <section class="hero">
-            <div class="fish-image">
-                <img id="mainFish" src="https://images.unsplash.com/photo-1551986782-d0169b3f8fa7?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80" alt="Beautiful Fish">
+        <section class="game-area">
+            <div class="score-board">
+                <div class="score">Score: <span id="score">0</span></div>
+                <div class="high-score">High Score: <span id="highScore">0</span></div>
             </div>
-            <div class="welcome-text">
-                <h2>Welcome to Fish Paradise!</h2>
-                <p>Discover the wonderful world of fish - from the majestic Whale Shark to the colorful Clownfish.</p>
-                <button id="fishBtn">Show Me More Fish!</button>
+            
+            <canvas id="gameCanvas" width="400" height="400"></canvas>
+            
+            <div class="controls">
+                <button id="startBtn">Start Game</button>
+                <button id="resetBtn">Reset Game</button>
             </div>
-        </section>
-        
-        <section class="fish-facts">
-            <h2>Amazing Fish Facts</h2>
-            <div class="facts-container">
-                <div class="fact-card">
-                    <h3>Whale Sharks</h3>
-                    <p>The largest fish species, growing up to 40 feet long and weighing up to 20 tons!</p>
-                </div>
-                <div class="fact-card">
-                    <h3>Fish Diet</h3>
-                    <p>Fish eat a variety of foods including algae, plants, and other fish, depending on their species.</p>
-                </div>
-                <div class="fact-card">
-                    <h3>Swimming Speed</h3>
-                    <p>Some fish can swim at speeds up to 68 mph, making them incredibly fast underwater!</p>
-                </div>
+            
+            <div class="instructions">
+                <h3>How to Play:</h3>
+                <p>Use the arrow keys to control the snake. Eat the food to grow longer and earn points. Avoid hitting the walls or yourself!</p>
+                <ul>
+                    <li>‚Üë - Move Up</li>
+                    <li>‚Üì - Move Down</li>
+                    <li>‚Üê - Move Left</li>
+                    <li>‚Üí - Move Right</li>
+                </ul>
         </div>
         </section>
-        
-        <section class="fish-gallery">
-            <h2>Fish Gallery</h2>
-            <div class="gallery-container" id="fishGallery">
-                <!-- Fish images will be added here via JavaScript -->
-        </div>
-        </section>
\ No newline at end of file
+    </div>
+    
+    <script src="script.js"></script>
+</body>
+</html>
\ No newline at end of file
diff --git a/script.js b/script.js
index 37d4af0..13d0460 100644
--- a/script.js
+++ b/script.js
@@ -1,180 +1,248 @@
-document.addEventListener('DOMContentLoaded', () => {
-    // Fish image URLs for the gallery
-    const fishImages = [
-        {
-            url: "https://images.unsplash.com/photo-1598439210625-358c27a14b9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "Whale Shark in the Ocean"
-        },
-        {
-            url: "https://images.unsplash.com/photo-1517783999520-f068d7431a60?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "Clownfish in Coral Reef"
-        },
-        {
-            url: "https://images.unsplash.com/photo-1549093497-93a18821d217?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "School of Tropical Fish"
-        },
-        {
-            url: "https://images.unsplash.com/photo-1596979240348-7c1b780c9a3a?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "Angelfish Swimming"
-        },
-        {
-            url: "https://images.unsplash.com/photo-1602491453631-e2a5ad90a131?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "Colorful Betta Fish"
-        },
-        {
-            url: "https://images.unsplash.com/photo-1540979388789-6cee28a1cdc9?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-            caption: "Fish Family"
-        }
-    ];
+// Game variables
+let canvas, ctx;
+let snake = [];
+let food = {};
+let direction = 'right';
+let newDirection = 'right';
+let gameSpeed = 100; // milliseconds
+let gridSize = 20;
+let gameRunning = false;
+let score = 0;
+let highScore = localStorage.getItem('snakeHighScore') || 0;
+
+// Initialize the game
+window.onload = function() {
+    canvas = document.getElementById('gameCanvas');
+    ctx = canvas.getContext('2d');
     
-    // More fish images for the "Show Me More Fish" button
-    const moreFishImages = [
-        "https://images.unsplash.com/photo-1598439210625-358c27a14b9e?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-        "https://images.unsplash.com/photo-1551986782-d0169b3f8fa7?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-        "https://images.unsplash.com/photo-1596979240348-7c1b780c9a3a?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
-        "https://images.unsplash.com/photo-1602491453631-e2a5ad90a131?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80"
-    ];
+    // Set up event listeners
+    document.getElementById('startBtn').addEventListener('click', startGame);
+    document.getElementById('resetBtn').addEventListener('click', resetGame);
+    document.addEventListener('keydown', changeDirection);
+    
+    // Display high score from local storage
+    document.getElementById('highScore').textContent = highScore;
+    
+    // Draw initial game state
+    drawGame();
+};
 
-    // Fish facts for random display
-    const fishFacts = [
-        "There are over 33,000 species of fish in the world.",
-        "The Whale Shark is the largest fish species, growing up to 40 feet long.",
-        "Fish can taste with their entire bodies, not just their mouths.",
-        "The smallest fish species is the Paedocypris, measuring just 7.9mm in length.",
-        "Many fish have color-changing abilities to help with camouflage.",
-        "Some fish species can leap up to 10 feet out of the water when swimming.",
-        "Fish are the oldest vertebrate group, dating back over 500 million years.",
-        "The Mariana snailfish can live at depths of over 26,000 feet.",
-        "Fish have specialized scales that help them move efficiently through water.",
-        "Some species of fish can change their gender during their lifetime."
+// Start the game
+function startGame() {
+    if (gameRunning) return;
+    
+    // Initialize snake
+    snake = [
+        {x: 5 * gridSize, y: 10 * gridSize},
+        {x: 4 * gridSize, y: 10 * gridSize},
+        {x: 3 * gridSize, y: 10 * gridSize}
     ];
     
-    // DOM elements
-    const fishBtn = document.getElementById('fishBtn');
-    const mainFish = document.getElementById('mainFish');
-    const fishGallery = document.getElementById('fishGallery');
+    // Reset game state
+    direction = 'right';
+    newDirection = 'right';
+    score = 0;
+    document.getElementById('score').textContent = score;
     
-    // Initialize the gallery
-    function initGallery() {
-        fishGallery.innerHTML = '';
-        
-        fishImages.forEach(fish => {
-            const galleryItem = document.createElement('div');
-            galleryItem.className = 'gallery-item';
-            
-            const img = document.createElement('img');
-            img.src = fish.url;
-            img.alt = fish.caption;
-            
-            const caption = document.createElement('div');
-            caption.className = 'gallery-caption';
-            caption.textContent = fish.caption;
-            
-            galleryItem.appendChild(img);
-            galleryItem.appendChild(caption);
-            fishGallery.appendChild(galleryItem);
+    // Generate first food
+    generateFood();
+    
+    // Start game loop
+    gameRunning = true;
+    gameLoop();
+}
+
+// Reset the game
+function resetGame() {
+    gameRunning = false;
+    ctx.clearRect(0, 0, canvas.width, canvas.height);
+    drawGame();
+}
+
+// Main game loop
+function gameLoop() {
+    if (!gameRunning) return;
+    
+    setTimeout(function() {
+        moveSnake();
+        checkCollision();
+        drawGame();
         
-            // Add click event to show a random fish fact
-            galleryItem.addEventListener('click', showRandomFishFact);
-        });
+        if (gameRunning) {
+            gameLoop();
+        }
+    }, gameSpeed);
+}
+
+// Move the snake
+function moveSnake() {
+    // Update direction based on user input
+    direction = newDirection;
+    
+    // Create new head based on current direction
+    const head = {x: snake[0].x, y: snake[0].y};
+    
+    switch(direction) {
+        case 'up':
+            head.y -= gridSize;
+            break;
+        case 'down':
+            head.y += gridSize;
+            break;
+        case 'left':
+            head.x -= gridSize;
+            break;
+        case 'right':
+            head.x += gridSize;
+            break;
     }
     
-    // Show a random fish fact when a gallery image is clicked
-    function showRandomFishFact() {
-        const randomFact = fishFacts[Math.floor(Math.random() * fishFacts.length)];
-        
-        // Create and show a fact popup
-        const factPopup = document.createElement('div');
-        factPopup.className = 'fact-popup';
-        factPopup.innerHTML = `
-            <div class="fact-popup-content">
-                <h3>üêü Fish Fact! üêü</h3>
-                <p>${randomFact}</p>
-                <button class="close-popup">Close</button>
-            </div>
-        `;
+    // Add new head to the beginning of snake array
+    snake.unshift(head);
+    
+    // Check if snake ate food
+    if (head.x === food.x && head.y === food.y) {
+        // Increase score
+        score += 10;
+        document.getElementById('score').textContent = score;
         
-        document.body.appendChild(factPopup);
-            
-        // Style the popup
-        const popupStyle = document.createElement('style');
-        popupStyle.textContent = `
-            .fact-popup {
-                position: fixed;
-                top: 0;
-                left: 0;
-                width: 100%;
-                height: 100%;
-                background-color: rgba(0, 0, 0, 0.7);
-                display: flex;
-                justify-content: center;
-                align-items: center;
-                z-index: 1000;
-            }
-            .fact-popup-content {
-                background-color: white;
-                padding: 20px;
-                border-radius: 10px;
-                max-width: 400px;
-                text-align: center;
-            }
-            .close-popup {
-                margin-top: 15px;
-            }
-        `;
-        document.head.appendChild(popupStyle);
+        // Update high score if needed
+        if (score > highScore) {
+            highScore = score;
+            document.getElementById('highScore').textContent = highScore;
+            localStorage.setItem('snakeHighScore', highScore);
+        }
         
-        // Add close functionality
-        const closeBtn = factPopup.querySelector('.close-popup');
-        closeBtn.addEventListener('click', () => {
-            document.body.removeChild(factPopup);
-        });
+        // Generate new food
+        generateFood();
+    } else {
+        // Remove tail if no food was eaten
+        snake.pop();
     }
+}
 
-    // Change the main fish image when button is clicked
-    let currentImageIndex = 0;
-    fishBtn.addEventListener('click', () => {
-        currentImageIndex = (currentImageIndex + 1) % moreFishImages.length;
-        mainFish.src = moreFishImages[currentImageIndex];
-        
-        // Add a fun animation
-        mainFish.style.transition = 'transform 0.5s ease';
-        mainFish.style.transform = 'scale(1.1)';
-        
-        setTimeout(() => {
-            mainFish.style.transform = 'scale(1)';
-        }, 500);
-        
-        // Change button text occasionally
-        if (Math.random() > 0.7) {
-            const buttonTexts = [
-                "More Fish Please!",
-                "I Love Fish!",
-                "Another Fish!",
-                "Fish Are Awesome!",
-                "Show Me More!"
-            ];
-            fishBtn.textContent = buttonTexts[Math.floor(Math.random() * buttonTexts.length)];
+// Handle keyboard input for direction changes
+function changeDirection(event) {
+    const key = event.keyCode;
+    
+    // Prevent reversing direction
+    if (key === 37 && direction !== 'right') { // Left Arrow
+        newDirection = 'left';
+    } else if (key === 38 && direction !== 'down') { // Up Arrow
+        newDirection = 'up';
+    } else if (key === 39 && direction !== 'left') { // Right Arrow
+        newDirection = 'right';
+    } else if (key === 40 && direction !== 'up') { // Down Arrow
+        newDirection = 'down';
+    }
+}
+
+// Check for collisions
+function checkCollision() {
+    const head = snake[0];
+    
+    // Check wall collision
+    if (
+        head.x < 0 || 
+        head.y < 0 || 
+        head.x >= canvas.width || 
+        head.y >= canvas.height
+    ) {
+        gameOver();
+        return;
+    }
+    
+    // Check self collision (skip the head)
+    for (let i = 1; i < snake.length; i++) {
+        if (head.x === snake[i].x && head.y === snake[i].y) {
+            gameOver();
+            return;
         }
-    });
-    
-    // Add a "swim" effect to the fish image on hover
-    mainFish.addEventListener('mouseover', () => {
-        let swimCount = 0;
-        const swimInterval = setInterval(() => {
-            mainFish.style.transform = swimCount % 2 === 0 ? 'translateX(5px)' : 'translateX(-5px)';
-            swimCount++;
-            
-            if (swimCount > 6) {
-                clearInterval(swimInterval);
-                mainFish.style.transform = 'translateX(0)';
+    }
+}
+
+// Game over
+function gameOver() {
+    gameRunning = false;
+    
+    // Draw game over text
+    ctx.fillStyle = 'white';
+    ctx.font = '30px Arial';
+    ctx.textAlign = 'center';
+    ctx.fillText('Game Over!', canvas.width / 2, canvas.height / 2);
+    ctx.font = '20px Arial';
+    ctx.fillText('Press Start to play again', canvas.width / 2, canvas.height / 2 + 30);
+}
+
+// Generate food at random position
+function generateFood() {
+    // Calculate grid positions (avoid placing food on snake)
+    const gridWidth = canvas.width / gridSize;
+    const gridHeight = canvas.height / gridSize;
+    
+    let foodPosition;
+    let foodOnSnake;
+    
+    do {
+        foodOnSnake = false;
+        foodPosition = {
+            x: Math.floor(Math.random() * gridWidth) * gridSize,
+            y: Math.floor(Math.random() * gridHeight) * gridSize
+        };
+        
+        // Check if food is on snake
+        for (let segment of snake) {
+            if (segment.x === foodPosition.x && segment.y === foodPosition.y) {
+                foodOnSnake = true;
+                break;
             }
-        }, 200);
-    });
+        }
+    } while (foodOnSnake);
+    
+    food = foodPosition;
+}
+
+// Draw everything
+function drawGame() {
+    // Clear canvas
+    ctx.clearRect(0, 0, canvas.width, canvas.height);
+    
+    // Draw snake
+    ctx.fillStyle = '#4CAF50';
+    for (let segment of snake) {
+        ctx.fillRect(segment.x, segment.y, gridSize, gridSize);
+        
+        // Add border to snake segments
+        ctx.strokeStyle = '#2E7D32';
+        ctx.strokeRect(segment.x, segment.y, gridSize, gridSize);
+    }
+    
+    // Draw food
+    ctx.fillStyle = '#FF5722';
+    ctx.fillRect(food.x, food.y, gridSize, gridSize);
+    ctx.strokeStyle = '#BF360C';
+    ctx.strokeRect(food.x, food.y, gridSize, gridSize);
+    
+    // Draw grid (optional, for debugging)
+    // drawGrid();
+}
 
-    // Initialize the gallery when the page loads
-    initGallery();
+// Draw grid lines (optional, for debugging)
+function drawGrid() {
+    ctx.strokeStyle = '#222';
+    ctx.lineWidth = 0.5;
     
-    // Add a fun welcome message
-    console.log("üêü Welcome to Fish Paradise! üêü");
-});
\ No newline at end of file
+    for (let x = 0; x < canvas.width; x += gridSize) {
+        ctx.beginPath();
+        ctx.moveTo(x, 0);
+        ctx.lineTo(x, canvas.height);
+        ctx.stroke();
+    }
+    
+    for (let y = 0; y < canvas.height; y += gridSize) {
+        ctx.beginPath();
+        ctx.moveTo(0, y);
+        ctx.lineTo(canvas.width, y);
+        ctx.stroke();
+    }
+}
\ No newline at end of file
diff --git a/style.css b/style.css
index b4eb033..348c5b8 100644
--- a/style.css
+++ b/style.css
@@ -2,12 +2,12 @@ body {
     font-family: 'Arial', sans-serif;
     margin: 0;
     padding: 0;
-    background-color: #e0f7ff; /* Light blue background like water */
+    background-color: #f0f0f0;
     color: #333;
 }
 
-.fish-container {
-    max-width: 1200px;
+.game-container {
+    max-width: 800px;
     margin: 0 auto;
     padding: 20px;
 }
@@ -15,7 +15,7 @@ body {
 header {
     text-align: center;
     padding: 20px 0;
-    background-color: #005b96; /* Deep blue */
+    background-color: #4CAF50; /* Green theme for snake */
     color: white;
     border-radius: 10px;
     margin-bottom: 20px;
@@ -32,120 +32,87 @@ h1 {
     margin-top: 10px;
 }
 
-.hero {
+.game-area {
     display: flex;
-    flex-wrap: wrap;
+    flex-direction: column;
     align-items: center;
     background-color: #ffffff;
     border-radius: 10px;
-    overflow: hidden;
-    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
-    margin-bottom: 30px;
-}
-
-.fish-image {
-    flex: 1;
-    min-width: 300px;
     padding: 20px;
+    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
 }
 
-.fish-image img {
-    width: 100%;
-    height: auto;
-    border-radius: 10px;
-    transition: transform 0.3s ease;
+.score-board {
+    display: flex;
+    justify-content: space-between;
+    width: 400px;
+    margin-bottom: 15px;
+    font-size: 1.2rem;
+    font-weight: bold;
 }
 
-.fish-image img:hover {
-    transform: scale(1.05);
+#gameCanvas {
+    background-color: #000;
+    border: 3px solid #4CAF50;
+    border-radius: 5px;
 }
 
-.welcome-text {
-    flex: 1;
-    padding: 20px;
-    min-width: 300px;
+.controls {
+    margin: 20px 0;
+    display: flex;
+    gap: 20px;
 }
 
 button {
-    background-color: #005b96; /* Deep blue */
+    padding: 10px 20px;
+    font-size: 1rem;
+    background-color: #4CAF50;
     color: white;
     border: none;
-    padding: 12px 24px;
-    font-size: 1rem;
     border-radius: 5px;
     cursor: pointer;
-    transition: background-color 0.3s ease;
-    margin-top: 15px;
+    transition: background-color 0.3s;
 }
 
 button:hover {
-    background-color: #003d66; /* Darker blue */
+    background-color: #45a049;
 }
 
-.fish-facts {
-    background-color: #ffffff;
-    padding: 20px;
-    border-radius: 10px;
-    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
-    margin-bottom: 30px;
+button:active {
+    transform: scale(0.98);
 }
 
-.fish-facts h2 {
+.instructions {
+    margin-top: 20px;
     text-align: center;
-    color: #005b96;
-}
-
-.facts-container {
-    display: flex;
-    flex-wrap: wrap;
-    justify-content: space-between;
-    gap: 20px;
-}
-
-.fact-card {
-    flex: 1;
-    min-width: 250px;
-    background-color: #f0f9ff; /* Very light blue */
-    padding: 15px;
-    border-radius: 8px;
-    border-left: 5px solid #005b96;
-}
-
-.fact-card h3 {
-    color: #005b96;
-    margin-top: 0;
+    max-width: 500px;
 }
 
-.fish-gallery {
-    background-color: #ffffff;
-    padding: 20px;
-    border-radius: 10px;
-    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
-    margin-bottom: 30px;
+.instructions h3 {
+    margin-bottom: 10px;
+    color: #4CAF50;
 }
 
-.fish-gallery h2 {
-    text-align: center;
-    color: #005b96;
+.instructions ul {
+    list-style-type: none;
+    padding: 0;
+    display: flex;
+    justify-content: center;
+    gap: 15px;
+    margin-top: 15px;
 }
 
-.gallery-container {
-    display: grid;
-    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
-    gap: 15px;
-    margin-top: 20px;
+.instructions li {
+    font-weight: bold;
 }
 
-.gallery-item {
-    position: relative;
-    overflow: hidden;
-    border-radius: 8px;
-    height: 200px;
-    cursor: pointer;
+@media (max-width: 600px) {
+    #gameCanvas {
+        width: 300px;
+        height: 300px;
 }
 
-.gallery-item img {
-    width: 100%;
-    height: 100%;
-    object-fit: cover;
+    .score-board {
+        width: 300px;
+    }
 }
\ No newline at end of file
