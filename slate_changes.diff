diff --git a/index.html b/index.html
index 890c66c..fa3ffb0 100644
--- a/index.html
+++ b/index.html
@@ -3,14 +3,14 @@
 <head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-    <title>Arctic Snake Game</title>
+    <title>Snake Game</title>
     <link rel="stylesheet" href="style.css">
 </head>
 <body>
     <div class="game-container">
         <header>
-            <h1>❄️ Arctic Snake ❄️</h1>
-            <p class="tagline">Slither through the frozen wilderness!</p>
+            <h1>Snake Game</h1>
+            <p class="tagline">Classic arcade fun!</p>
         </header>
         
         <section class="game-area">
diff --git a/script.js b/script.js
index 1ca972e..110a9d7 100644
--- a/script.js
+++ b/script.js
@@ -251,119 +251,96 @@ function drawGame() {
     // Clear canvas
     ctx.clearRect(0, 0, canvas.width, canvas.height);
     
-    // Draw snake as penguins
+    // Draw snake
     for (let i = 0; i < snake.length; i++) {
         const segment = snake[i];
         const isHead = i === 0;
         
-        // Draw penguin for each segment
-        drawPenguin(segment.x, segment.y, gridSize, isHead);
-    }
-    
-    // Draw food (arctic fish)
-    ctx.fillStyle = '#E91E63'; // Pinkish color for arctic fish/seal
-    ctx.fillRect(food.x, food.y, gridSize, gridSize);
-    ctx.strokeStyle = '#C2185B'; // Darker border
-    ctx.strokeRect(food.x, food.y, gridSize, gridSize);
-    
-    // Optional: Draw snowflakes (randomly)
-    if (Math.random() < 0.05) { // 5% chance each frame
-        drawSnowflake();
-    }
-    
-    // Draw grid (optional, for debugging)
-    // drawGrid();
-}
-
-// Draw a random snowflake
-function drawSnowflake() {
-    const x = Math.random() * canvas.width;
-    const y = Math.random() * canvas.height;
-    const size = Math.random() * 3 + 1;
-    
+        // Draw snake segment
+        if (isHead) {
+            // Head - slightly different color
+            ctx.fillStyle = '#4CAF50'; // Brighter green for head
+            ctx.strokeStyle = '#388E3C'; // Darker green border
+        } else {
+            // Body segments
+            ctx.fillStyle = '#66BB6A'; // Green for body
+            ctx.strokeStyle = '#388E3C'; // Darker green border
+        }
+        
+        // Draw segment with slight padding for visual separation
+        const padding = 1;
+        ctx.fillRect(segment.x + padding, segment.y + padding, gridSize - padding * 2, gridSize - padding * 2);
+        ctx.strokeRect(segment.x + padding, segment.y + padding, gridSize - padding * 2, gridSize - padding * 2);
+    
+        // Add eyes to the head
+        if (isHead) {
+            const eyeSize = 3;
+            const eyeOffset = gridSize / 4;
+            
+            // Position eyes based on direction
+            let leftEyeX, leftEyeY, rightEyeX, rightEyeY;
+            
+            switch(direction) {
+                case 'up':
+                    leftEyeX = segment.x + eyeOffset;
+                    leftEyeY = segment.y + eyeOffset;
+                    rightEyeX = segment.x + gridSize - eyeOffset;
+                    rightEyeY = segment.y + eyeOffset;
+                    break;
+                case 'down':
+                    leftEyeX = segment.x + eyeOffset;
+                    leftEyeY = segment.y + gridSize - eyeOffset;
+                    rightEyeX = segment.x + gridSize - eyeOffset;
+                    rightEyeY = segment.y + gridSize - eyeOffset;
+                    break;
+                case 'left':
+                    leftEyeX = segment.x + eyeOffset;
+                    leftEyeY = segment.y + eyeOffset;
+                    rightEyeX = segment.x + eyeOffset;
+                    rightEyeY = segment.y + gridSize - eyeOffset;
+                    break;
+                case 'right':
+                    leftEyeX = segment.x + gridSize - eyeOffset;
+                    leftEyeY = segment.y + eyeOffset;
+                    rightEyeX = segment.x + gridSize - eyeOffset;
+                    rightEyeY = segment.y + gridSize - eyeOffset;
+                    break;
+            }
+            
+            // Draw eyes
     ctx.fillStyle = 'white';
     ctx.beginPath();
-    ctx.arc(x, y, size, 0, Math.PI * 2);
+            ctx.arc(leftEyeX, leftEyeY, eyeSize, 0, Math.PI * 2);
+            ctx.arc(rightEyeX, rightEyeY, eyeSize, 0, Math.PI * 2);
     ctx.fill();
-}
 
-// Draw a penguin at the specified coordinates
-function drawPenguin(x, y, size, isHead) {
-    // Center point of the cell
-    const centerX = x + size / 2;
-    const centerY = y + size / 2;
-    
-    // Scale factor (slightly smaller than the grid to have some padding)
-    const scale = size * 0.9;
-    
-    // Body (oval)
-    ctx.fillStyle = '#000000'; // Black for penguin body
+            // Draw pupils
+            ctx.fillStyle = 'black';
     ctx.beginPath();
-    ctx.ellipse(centerX, centerY, scale/2, scale/2.5, 0, 0, Math.PI * 2);
+            ctx.arc(leftEyeX, leftEyeY, eyeSize/2, 0, Math.PI * 2);
+            ctx.arc(rightEyeX, rightEyeY, eyeSize/2, 0, Math.PI * 2);
     ctx.fill();
+        }
+    }
     
-    // White belly
-    ctx.fillStyle = '#FFFFFF';
+    // Draw food (apple)
+    ctx.fillStyle = '#F44336'; // Red for apple
     ctx.beginPath();
-    ctx.ellipse(centerX, centerY + scale/10, scale/3, scale/3, 0, 0, Math.PI * 2);
+    ctx.arc(food.x + gridSize/2, food.y + gridSize/2, gridSize/2 - 2, 0, Math.PI * 2);
     ctx.fill();
     
-    if (isHead) {
-        // Eyes (only on head)
-        const eyeSize = scale/8;
-        
-        // Left eye
-        ctx.fillStyle = '#FFFFFF';
-        ctx.beginPath();
-        ctx.arc(centerX - scale/4, centerY - scale/8, eyeSize, 0, Math.PI * 2);
-        ctx.fill();
-        
-        // Left pupil
-        ctx.fillStyle = '#000000';
-        ctx.beginPath();
-        ctx.arc(centerX - scale/4, centerY - scale/8, eyeSize/2, 0, Math.PI * 2);
-        ctx.fill();
-        
-        // Right eye
-        ctx.fillStyle = '#FFFFFF';
-        ctx.beginPath();
-        ctx.arc(centerX + scale/4, centerY - scale/8, eyeSize, 0, Math.PI * 2);
-        ctx.fill();
-        
-        // Right pupil
-        ctx.fillStyle = '#000000';
-        ctx.beginPath();
-        ctx.arc(centerX + scale/4, centerY - scale/8, eyeSize/2, 0, Math.PI * 2);
-        ctx.fill();
+    // Draw apple stem
+    ctx.fillStyle = '#795548'; // Brown for stem
+    ctx.fillRect(food.x + gridSize/2 - 1, food.y + 2, 2, 4);
         
-        // Orange beak
-        ctx.fillStyle = '#FF9800';
-        ctx.beginPath();
-        ctx.moveTo(centerX - scale/6, centerY + scale/8);
-        ctx.lineTo(centerX + scale/6, centerY + scale/8);
-        ctx.lineTo(centerX, centerY + scale/4);
-        ctx.closePath();
-        ctx.fill();
-    }
-    
-    // Flippers (small triangles on the sides)
-    ctx.fillStyle = '#000000';
-    
-    // Left flipper
+    // Optional: Draw leaf
+    ctx.fillStyle = '#8BC34A'; // Green for leaf
     ctx.beginPath();
-    ctx.moveTo(centerX - scale/2, centerY);
-    ctx.lineTo(centerX - scale/1.5, centerY);
-    ctx.lineTo(centerX - scale/2, centerY + scale/4);
-    ctx.closePath();
+    ctx.ellipse(food.x + gridSize/2 + 3, food.y + 4, 3, 2, Math.PI/4, 0, Math.PI * 2);
     ctx.fill();
     
-    // Right flipper
-    ctx.beginPath();
-    ctx.moveTo(centerX + scale/2, centerY);
-    ctx.lineTo(centerX + scale/1.5, centerY);
-    ctx.lineTo(centerX + scale/2, centerY + scale/4);
-    ctx.closePath();
-    ctx.fill();
+    // Draw grid (optional, for debugging)
+    // drawGrid();
 }
 
 // Draw grid lines (optional, for debugging)
diff --git a/style.css b/style.css
index e270dbc..f9a685f 100644
--- a/style.css
+++ b/style.css
@@ -2,7 +2,7 @@ body {
     font-family: 'Arial', sans-serif;
     margin: 0;
     padding: 0;
-    background-color: #e8f4f8; /* Light icy blue background */
+    background-color: #f5f5f5; /* Light gray background */
     color: #333;
 }
 
@@ -15,7 +15,7 @@ body {
 header {
     text-align: center;
     padding: 20px 0;
-    background-color: #2196F3; /* Icy blue theme */
+    background-color: #4CAF50; /* Green theme */
     color: white;
     border-radius: 10px;
     margin-bottom: 20px;
@@ -25,7 +25,7 @@ header {
 h1 {
     margin: 0;
     font-size: 2.5rem;
-    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Add shadow for icy effect */
+    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
 }
 
 .tagline {
@@ -50,14 +50,14 @@ h1 {
     margin-bottom: 15px;
     font-size: 1.2rem;
     font-weight: bold;
-    color: #1565C0; /* Darker blue for text */
+    color: #388E3C; /* Darker green for text */
 }
 
 #gameCanvas {
-    background-color: #f0f9ff; /* Light blue/white for snow */
-    border: 3px solid #2196F3; /* Icy blue border */
+    background-color: #f8f8f8; /* Light background */
+    border: 3px solid #4CAF50; /* Green border */
     border-radius: 5px;
-    box-shadow: 0 0 10px rgba(33, 150, 243, 0.3); /* Subtle blue glow */
+    box-shadow: 0 0 10px rgba(76, 175, 80, 0.3); /* Subtle green glow */
 }
 
 .controls {
@@ -69,7 +69,7 @@ h1 {
 button {
     padding: 10px 20px;
     font-size: 1rem;
-    background-color: #2196F3; /* Icy blue buttons */
+    background-color: #4CAF50; /* Green buttons */
     color: white;
     border: none;
     border-radius: 5px;
@@ -78,7 +78,7 @@ button {
 }
 
 button:hover {
-    background-color: #1E88E5; /* Slightly darker blue on hover */
+    background-color: #388E3C; /* Slightly darker green on hover */
 }
 
 button:active {
@@ -93,7 +93,7 @@ button:active {
 
 .instructions h3 {
     margin-bottom: 10px;
-    color: #2196F3; /* Icy blue for headings */
+    color: #4CAF50; /* Green for headings */
 }
 
 .instructions ul {
@@ -107,7 +107,7 @@ button:active {
 
 .instructions li {
     font-weight: bold;
-    color: #1976D2; /* Darker blue for list items */
+    color: #388E3C; /* Darker green for list items */
 }
 
 /* Mobile Controls */
@@ -130,7 +130,7 @@ button:active {
     width: 60px;
     height: 60px;
     font-size: 24px;
-    background-color: #2196F3;
+    background-color: #4CAF50;
     color: white;
     border: none;
     border-radius: 50%;
@@ -143,7 +143,7 @@ button:active {
 }
 
 .direction-btn:active {
-    background-color: #1565C0;
+    background-color: #388E3C;
     transform: scale(0.95);
 }
 
